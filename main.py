
import asyncio
import logging
from telethon import TelegramClient
from flask import Flask
from threading import Thread

# Th√¥ng tin ƒëƒÉng nh·∫≠p Telegram API
API_ID = 20976448
API_HASH = "9c550766b2ad538f194d27d0c30d8678"
PHONE_NUMBER = "84983286226"
CHAT_ID = -1002442620965

# Kho·∫£ng th·ªùi gian gi·ªØa c√°c l·∫ßn g·ª≠i tin nh·∫Øn
MESSAGE_INTERVAL = 12 * 60  # 12 ph√∫t

# Danh s√°ch tin nh·∫Øn
MESSAGES = [
    "‚öîÔ∏èüë∫‚öîÔ∏èPhi√™n b·∫£n SpamCall ƒë√£ ch·∫°y. X√°c ƒë·ªãnh ƒëi m·∫•y con l·ª£n üê∑üê∑üê∑\n√âc √©c √©c !!!",
    "/vip 0367590613",
    "/vip 0339955467", 
    "/vip 0903727909",
    "/vip 0984328184",
    "/call 0367590613",
    "/call 0339955467",
    "/call 0903727909",
    "/call 0984328184",
]

# C·∫•u h√¨nh logging
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# Flask server
app = Flask(__name__)

@app.route('/')
def home():
    return "Bot Telegram ƒëang ch·∫°y"

def run():
    app.run(host='0.0.0.0', port=8080)

def keep_alive():
    server = Thread(target=run)
    server.start()

async def send_message(client, message):
    """G·ª≠i tin nh·∫Øn ƒë·∫øn nh√≥m ch·ªâ ƒë·ªãnh"""
    retries = 3
    while retries > 0:
        try:
            await client.send_message(CHAT_ID, message)
            logger.info(f"ƒê√£ g·ª≠i tin nh·∫Øn: {message}")
            break
        except Exception as e:
            retries -= 1
            if retries == 0:
                logger.error(f"L·ªói khi g·ª≠i tin nh·∫Øn sau 3 l·∫ßn th·ª≠: {e}")
            else:
                logger.warning(f"L·ªói khi g·ª≠i tin nh·∫Øn, th·ª≠ l·∫°i l·∫ßn {3-retries}: {e}")
                await asyncio.sleep(2)

async def scheduled_message(client):
    """G·ª≠i t·∫•t c·∫£ tin nh·∫Øn m·ªói 12 ph√∫t v√† x√≥a tin nh·∫Øn c≈©"""
    while True:
        try:
            # X√≥a tin nh·∫Øn c≈© tr∆∞·ªõc khi g·ª≠i tin m·ªõi
            logger.info("ƒêang x√≥a tin nh·∫Øn c≈©...")
            async for message in client.iter_messages(CHAT_ID):
                await message.delete()
            logger.info("ƒê√£ x√≥a tin nh·∫Øn c≈©")
            
            # G·ª≠i tin nh·∫Øn m·ªõi
            logger.info("B·∫Øt ƒë·∫ßu g·ª≠i t·∫•t c·∫£ tin nh·∫Øn...")
            for message in MESSAGES:
                await send_message(client, message)
                await asyncio.sleep(2)
            logger.info(f"ƒê√£ g·ª≠i t·∫•t c·∫£ tin nh·∫Øn. ƒê·ª£i {MESSAGE_INTERVAL//60} ph√∫t tr∆∞·ªõc khi g·ª≠i l·∫°i...")
            await asyncio.sleep(MESSAGE_INTERVAL)
        except Exception as e:
            logger.error(f"L·ªói trong chu tr√¨nh g·ª≠i/x√≥a tin nh·∫Øn: {e}")
            await asyncio.sleep(60)  # ƒê·ª£i 1 ph√∫t tr∆∞·ªõc khi th·ª≠ l·∫°i n·∫øu c√≥ l·ªói

async def main():
    """H√†m ch√≠nh c·ªßa ·ª©ng d·ª•ng"""
    if not PHONE_NUMBER:
        logger.error("Vui l√≤ng cung c·∫•p TELEGRAM_PHONE_NUMBER trong bi·∫øn m√¥i tr∆∞·ªùng")
        return

    client = TelegramClient('session_name', API_ID, API_HASH)
    await client.start(phone=PHONE_NUMBER)

    if not await client.is_user_authorized():
        logger.error("Phi√™n ƒëƒÉng nh·∫≠p kh√¥ng h·ª£p l·ªá. Vui l√≤ng ki·ªÉm tra l·∫°i th√¥ng tin ƒëƒÉng nh·∫≠p.")
        return

    logger.info("ƒê√£ ƒëƒÉng nh·∫≠p th√†nh c√¥ng!")
    await scheduled_message(client)

if __name__ == "__main__":
    logger.info("Client Telegram ƒëang kh·ªüi ƒë·ªông...")
    keep_alive() # Kh·ªüi ƒë·ªông web server
    asyncio.run(main())
